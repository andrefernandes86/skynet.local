apiVersion: apps/v1
kind: Deployment
metadata:
  name: openwebui
  labels:
    app.kubernetes.io/name: openwebui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openwebui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openwebui
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
      containers:
      - name: openwebui
        image: ghcr.io/open-webui/open-webui:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: OLLAMA_API_BASE_URL
            value: http://ollama:11434
        ports:
          - name: http
            containerPort: 8080
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities: { drop: ["ALL"] }
        readinessProbe:
          httpGet: { path: "/", port: 8080 }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: "/", port: 8080 }
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests: { cpu: 200m, memory: 256Mi }
          limits:   { cpu: "1",  memory: 1Gi }
---
apiVersion: v1
kind: Service
metadata:
  name: openwebui
  labels:
    app.kubernetes.io/name: openwebui
spec:
  selector:
    app.kubernetes.io/name: openwebui
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  labels:
    app.kubernetes.io/name: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ollama
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ollama
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
      containers:
      - name: ollama
        image: ollama/ollama:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: OLLAMA_HOST
            value: 0.0.0.0:11434
        ports:
          - name: api
            containerPort: 11434
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities: { drop: ["ALL"] }
        volumeMounts:
          - name: ollama-data
            mountPath: /root/.ollama
        readinessProbe:
          httpGet: { path: "/api/version", port: 11434 }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: "/api/version", port: 11434 }
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests: { cpu: 500m, memory: 1Gi }
          limits:   { cpu: "2",  memory: 4Gi }
      volumes:
        - name: ollama-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  labels:
    app.kubernetes.io/name: ollama
spec:
  selector:
    app.kubernetes.io/name: ollama
  ports:
    - name: api
      port: 11434
      targetPort: 11434
      nodePort: 31134
  type: NodePort
